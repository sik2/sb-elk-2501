input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/logstash-core/lib/jars/mysql-connector-j-9.2.0.jar"
    jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://host.docker.internal:3306/es_dev?useSSL=false&allowPublicKeyRetrieval=true"
    jdbc_user => "lldd"
    jdbc_password => "1234"

    # SQL 쿼리 추적을 위한 설정
    use_column_value => true
    tracking_column => "id"
    tracking_column_type => "numeric"
    last_run_metadata_path => "/usr/share/logstash/last_run_metadata"

    # 실행할 SQL 쿼리
    statement => "SELECT * FROM post WHERE id > :sql_last_value"

    # 스케줄링 설정
    schedule => "*/10 * * * * *"
  }
}

filter {
  mutate {
    remove_field => ["@version", "@timestamp"]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "app1_posts"
    document_id => "%{id}"
    
    template_overwrite => true
    template => {
      "settings" => {
        "number_of_shards" => 1,
        "number_of_replicas" => 0,
        "analysis" => {
          "analyzer" => {
            "nori_analyzer" => {
              "type" => "custom",
              "tokenizer" => "nori_tokenizer",
              "filter" => ["nori_posfilter"]
            }
          },
          "filter" => {
            "nori_posfilter" => {
              "type" => "nori_part_of_speech",
              "stoptags" => ["E", "IC", "J", "MAG", "MM", "SP", "SSC", "SSO", "SC", "SE"]
            }
          }
        }
      },
      "mappings" => {
        "properties" => {
          "id" => { "type" => "long" },
          "title" => {
            "type" => "text",
            "analyzer" => "nori_analyzer"
          },
          "content" => {
            "type" => "text",
            "analyzer" => "nori_analyzer"
          }
        }
      }
    }
  }
  stdout {
    codec => rubydebug
  }
}